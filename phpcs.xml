<?xml version="1.0"?>
<ruleset name="PHP_CodeSniffer">
    <description>ua-result</description>

    <arg name="report" value="full" />
    <arg value="wps" />
    <arg name="tab-width" value="4"/>
    <arg name="encoding" value="utf-8"/>

    <!-- inherit rules from: -->
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Code MUST use an indent of 4 spaces, and MUST NOT use tabs for indenting. -->
    <rule ref="Generic.WhiteSpace.ScopeIndent"/>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>

    <!-- PHP code MUST use only UTF-8 without BOM. -->
    <rule ref="Generic.Files.ByteOrderMark"/>

    <!-- PHP code MUST NOT contain any character before the opening tag -->
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>

    <!-- Never use shorthand PHP start tags. Always use full PHP tags. -->
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DisallowAlternativePHPTags"/>

    <!-- PHP keywords MUST be in lower case. -->
    <rule ref="Generic.PHP.LowerCaseKeyword"/>

    <!-- The PHP constants true, false, and null MUST be in lower case. -->
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <!-- PHP files should contain an empty line at the end of the file -->
    <rule ref="Generic.Files.EndFileNewline"/>

    <!-- Allow only unix file endings (newlines) -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="allowMultiline" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.ForbiddenFunctions" />

    <!-- Braces should always be used, even when they are not required. -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>

    <!-- When type casting, do it like so: $foo = (boolean) $bar; -->
    <rule ref="Generic.Formatting.SpaceAfterCast"/>

    <!-- Rule: In general, readability is more important than cleverness or brevity. -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>

    <!-- (No) Error Control Operator @. -->
    <rule ref="Generic.PHP.NoSilencedErrors"/>

    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCATCH"/><!-- empty catch statements are allowed -->
    </rule>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman">
        <exclude name="Generic.Functions.OpeningFunctionBraceBsdAllman.BraceOnSameLine"/>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    
    <rule ref="PSR2">
        <exclude name="Generic.Files.LineLength.TooLong"/><!-- can not be suppressed -->
        <exclude name="PEAR.Functions.ValidDefaultValue"/><!-- we want to allow null as "default" value -->
        <exclude name="PSR2.Classes.ClassDeclaration"/><!-- we want whitespace around class body and rules for extends and implements, using PEAR instead -->
        <exclude name="Squiz.Functions.LowercaseFunctionKeywords"/><!-- checked by more generic Generic.PHP.LowerCaseKeyword -->
        <exclude name="Squiz.ControlStructures.LowercaseDeclaration"/><!-- checked by more generic Generic.PHP.LowerCaseKeyword -->
    </rule>

    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>
    
    <rule ref="Squiz.Commenting.FunctionComment.Missing"/>
    <rule ref="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing"/>
    <rule ref="Squiz.Commenting.FunctionComment.MissingReturn"/>

    <!-- Paths to check -->
    <file>src</file>
    <file>tests</file>

    <exclude-pattern>*/temp/*</exclude-pattern>
</ruleset>
