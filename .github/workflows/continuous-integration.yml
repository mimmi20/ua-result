# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: "Continuous Integration"

jobs:
  validate:
    name: "Validate composer"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"

      - name: "Validate composer.json"
        run: "composer validate --strict"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Run composer-normalize"
        run: "composer normalize --dry-run"

  install:
    name: "Check dependencies"

    needs: "validate"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"

        dependencies:
          - "--prefer-lowest"
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Check dependencies with composer"
        run: "composer outdated --direct --strict"

  coding-standards:
    name: "Check Coding Standards"

    needs: "install"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "vendor/bin/php-cs-fixer fix --dry-run -vv"

      - name: "Run squizlabs/php_codesniffer"
        run: "vendor/bin/phpcs --colors"

  static-code-analysis:
    name: "Static Code Analysis"

    needs: "install"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Run phpstan/phpstan"
        run: "vendor/bin/phpstan analyse -c phpstan.neon --memory-limit=768M --no-progress"

  tests:
    name: "UnitTests"

    needs:
      - "coding-standards"
      - "static-code-analysis"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Run unit tests with phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --colors --no-coverage"

  code-coverage:
    name: "Code Coverage"

    needs: "tests"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "xdebug"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "vendor/bin/phpunit -c phpunit.xml --colors --coverage-clover=clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v1.0.14"
        with:
          token: "${{secrets.CODECOV_TOKEN}}"
          file: "clover.xml"
          flags: "phpunit"

  mutation-tests:
    name: "Mutation Tests"

    needs:
      - "tests"
      - "code-coverage"

    runs-on: "ubuntu-latest"

    strategy:
      fail-fast: false
      matrix:
        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.3"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.7.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json" #optional
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On" #optional
          coverage: "xdebug" #optional

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v2.1.2"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-versions }}-composer-${{ matrix.dependencies }}-"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction --no-suggest -vv ${{ matrix.dependencies }}"

      - name: "Run mutation tests with infection/infection"
        run: "vendor/bin/infection --min-covered-msi=95 --min-msi=95"
